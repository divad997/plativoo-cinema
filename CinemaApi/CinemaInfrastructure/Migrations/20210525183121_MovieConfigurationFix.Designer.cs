// <auto-generated />
using System;
using CinemaInfrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaInfrastructure.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20210525183121_MovieConfigurationFix")]
    partial class MovieConfigurationFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<Guid>("ActorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("CinemaCore.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b2a83c9-7db4-4d17-8577-8907ef9ea15d"),
                            DateOfBirth = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Downey Jr"
                        },
                        new
                        {
                            Id = new Guid("96850b21-633c-4cd7-aff9-02de5a8b305a"),
                            DateOfBirth = new DateTime(1981, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Chris",
                            LastName = "Evans"
                        },
                        new
                        {
                            Id = new Guid("b7d25307-e1a2-4f38-9614-723b40067087"),
                            DateOfBirth = new DateTime(1967, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mark",
                            LastName = "Ruffalo"
                        },
                        new
                        {
                            Id = new Guid("c15547bd-8996-4767-b0db-d5c8f24eea36"),
                            DateOfBirth = new DateTime(1972, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gwyneth",
                            LastName = "Paltrow"
                        },
                        new
                        {
                            Id = new Guid("ea261dd1-223c-4823-8418-25fe6fd51c42"),
                            DateOfBirth = new DateTime(1963, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Johnny",
                            LastName = "Depp"
                        },
                        new
                        {
                            Id = new Guid("65927bde-a9f3-42b9-b9ae-208448c31f76"),
                            DateOfBirth = new DateTime(1967, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Benicio",
                            LastName = "Del Toro"
                        },
                        new
                        {
                            Id = new Guid("74d8f9f1-9ae2-464d-90ce-ad806d54f7c3"),
                            DateOfBirth = new DateTime(1975, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tobey",
                            LastName = "Maguire"
                        });
                });

            modelBuilder.Entity("CinemaCore.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07b9e9b1-5b85-4abe-8e6c-3af9b6858224"),
                            DateOfBirth = new DateTime(1964, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Joss",
                            LastName = "Whedon"
                        },
                        new
                        {
                            Id = new Guid("a980f781-9c70-4b10-bc5b-b11acdc27fae"),
                            DateOfBirth = new DateTime(1966, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jon",
                            LastName = "Favreu"
                        },
                        new
                        {
                            Id = new Guid("91b57acf-ea13-4773-9f33-ae9f4d84daf0"),
                            DateOfBirth = new DateTime(1940, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Terry",
                            LastName = "Gilliam"
                        });
                });

            modelBuilder.Entity("CinemaCore.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2f66613-9378-4e5e-bca8-c8786f0154e6"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("db6a2124-1e44-40a9-bcce-be91c6400fff"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("8e2d23d7-9eae-4195-a3a5-dccac6d05514"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("75082de0-918b-493a-a071-f590177f8ed5"),
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("4edb5883-8e24-47ca-a4ce-19fccb3dcf80"),
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("CinemaCore.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("CinemaCore.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaCore.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CinemaCore.Models.Movie", b =>
                {
                    b.HasOne("CinemaCore.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaCore.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("CinemaCore.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("CinemaCore.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
